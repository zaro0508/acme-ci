- job-template:
    name: '{pipeline}-install-dsvm-networking-ovn-kuryr{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1

          export DEVSTACK_GATE_TEMPEST=0

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/networking-ovn/devstack/devstackgatekuryrrc

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-tempest-dsvm-networking-ovn{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/networking-ovn $PROJECTS"
          # Note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-ovn git://git.openstack.org/openstack/networking-ovn"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/networking-ovn/devstack/devstackgaterc

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-tempest-dsvm-networking-ovn-native-services{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/networking-ovn $PROJECTS"
          # Note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-ovn git://git.openstack.org/openstack/networking-ovn"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/networking-ovn/devstack/devstackgatenativeservicesrc

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-tempest-dsvm-networking-ovn-native-services-multinode{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          export DEVSTACK_GATE_TOPOLOGY="multinode"

          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/networking-ovn $PROJECTS"
          # Note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-ovn git://git.openstack.org/openstack/networking-ovn"
          export DEVSTACK_SUBNODE_CONFIG="enable_plugin networking-ovn git://git.openstack.org/openstack/networking-ovn"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/networking-ovn/devstack/devstackgatenativeservicesrc

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-rally-dsvm-networking-ovn{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export RALLY_SCENARIO=ovn
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          export PROJECTS="openstack/networking-ovn $PROJECTS"
          export PROJECTS="openstack/rally $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-ovn git://git.openstack.org/openstack/networking-ovn"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin rally git://git.openstack.org/openstack/rally"

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/networking-ovn/devstack/devstackgaterc

          function post_test_hook {{
              $BASE/new/rally/tests/ci/rally-gate.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - rally-plot
      - console-log

- job-template:
    name: '{pipeline}-networking-ovn-dsvm-{ovntest}{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_UNSTACK=1
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_EXERCISES=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_INSTALL_TESTONLY=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/networking-ovn $PROJECTS"

          function gate_hook {{
              bash -xe $BASE/new/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh dsvm-{ovntest}
          }}
          export -f gate_hook

          function post_test_hook {{
             bash -xe $BASE/new/networking-ovn/networking_ovn/tests/contrib/post_test_hook.sh dsvm-{ovntest}
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-grenade-dsvm-networking-ovn{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 150
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PROJECTS="openstack-dev/grenade openstack/networking-ovn $PROJECTS"
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_GRENADE=pullup
          export GRENADE_PLUGINRC="enable_grenade_plugin networking-ovn https://git.openstack.org/openstack/networking-ovn"
          export DEVSTACK_GATE_NEUTRON=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function pre_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-ovn/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-ovn/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/networking-ovn/devstack/devstackgaterc
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log
