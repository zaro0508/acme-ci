- job-template:
    name: '{pipeline}-tempest-dsvm-networking-odl-{odl-release-base}{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          # Make sure tempest is installed, but run it out of the post_test_hooks.sh
          # script from the networking-odl repository.
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_NOTESTS=1

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/networking-odl $PROJECTS"
          # Note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-odl git://git.openstack.org/openstack/networking-odl"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          # specify ODL release to use
          export ODL_RELEASE_BASE={odl-release-base}

          function pre_test_hook {{
              if [ -f $BASE/new/networking-odl/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-odl/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-odl/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-odl/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-rally-dsvm-networking-odl-{odl-release-base}{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export RALLY_SCENARIO=odl
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          export PROJECTS="openstack/networking-odl $PROJECTS"
          export PROJECTS="openstack/rally $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-odl git://git.openstack.org/openstack/networking-odl"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin rally git://git.openstack.org/openstack/rally"

          export OVERRIDE_ENABLED_SERVICES=q-svc,q-dhcp,q-meta,quantum,n-api,n-cond,n-cpu,n-crt,n-sch,g-api,g-reg,mysql,rabbit,key,dstat

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          # specify ODL release to use
          export ODL_RELEASE_BASE={odl-release-base}

          function pre_test_hook {{
              . $BASE/new/networking-odl/devstack/pre_test_hook.sh
          }}
          export -f pre_test_hook

          function post_test_hook {{
              $BASE/new/rally/tests/ci/rally-gate.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - rally-plot
      - console-log

- job-template:
    name: '{pipeline}-grenade-dsvm-networking-odl{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 150
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PROJECTS="openstack-dev/grenade openstack/networking-odl $PROJECTS"
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_GRENADE=pullup
          export GRENADE_PLUGINRC="enable_grenade_plugin networking-odl https://git.openstack.org/openstack/networking-odl"
          export DEVSTACK_GATE_NEUTRON=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-tempest-dsvm-networking-odl-multinode-{odl-release-base}{job-suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 180
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          # Make sure tempest is installed, but run it out of the post_test_hooks.sh
          # script from the networking-odl repository.
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_NOTESTS=1

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/networking-odl $PROJECTS"
          # Note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG="enable_plugin networking-odl git://git.openstack.org/openstack/networking-odl"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          # specify ODL release to use
          export ODL_RELEASE_BASE={odl-release-base}

          function pre_test_hook {{
              if [ -f $BASE/new/networking-odl/devstack/pre_test_hook.sh ] ; then
                  . $BASE/new/networking-odl/devstack/pre_test_hook.sh
              fi
          }}
          export -f pre_test_hook

          function post_test_hook {{
              if [ -f $BASE/new/networking-odl/devstack/post_test_hook.sh ] ; then
                  . $BASE/new/networking-odl/devstack/post_test_hook.sh
              fi
          }}
          export -f post_test_hook

          export DEVSTACK_GATE_TOPOLOGY="multinode"

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log